#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WellNet.ProcessRunner
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ProcessRunner")]
	public partial class ProcessRunnerDcDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertVendor(Vendor instance);
    partial void UpdateVendor(Vendor instance);
    partial void DeleteVendor(Vendor instance);
    partial void InsertTransmissionSite(TransmissionSite instance);
    partial void UpdateTransmissionSite(TransmissionSite instance);
    partial void DeleteTransmissionSite(TransmissionSite instance);
    partial void InsertNameValuePair(NameValuePair instance);
    partial void UpdateNameValuePair(NameValuePair instance);
    partial void DeleteNameValuePair(NameValuePair instance);
    partial void InsertEvent_Job(Event_Job instance);
    partial void UpdateEvent_Job(Event_Job instance);
    partial void DeleteEvent_Job(Event_Job instance);
    partial void InsertKind_FunctionParameter(Kind_FunctionParameter instance);
    partial void UpdateKind_FunctionParameter(Kind_FunctionParameter instance);
    partial void DeleteKind_FunctionParameter(Kind_FunctionParameter instance);
    partial void InsertKind_Function(Kind_Function instance);
    partial void UpdateKind_Function(Kind_Function instance);
    partial void DeleteKind_Function(Kind_Function instance);
    partial void InsertSetup_Job(Setup_Job instance);
    partial void UpdateSetup_Job(Setup_Job instance);
    partial void DeleteSetup_Job(Setup_Job instance);
    partial void InsertSetup_JobFunction(Setup_JobFunction instance);
    partial void UpdateSetup_JobFunction(Setup_JobFunction instance);
    partial void DeleteSetup_JobFunction(Setup_JobFunction instance);
    partial void InsertEvent_Message(Event_Message instance);
    partial void UpdateEvent_Message(Event_Message instance);
    partial void DeleteEvent_Message(Event_Message instance);
    partial void InsertKind_Parameter(Kind_Parameter instance);
    partial void UpdateKind_Parameter(Kind_Parameter instance);
    partial void DeleteKind_Parameter(Kind_Parameter instance);
    partial void InsertSetup_Parameter(Setup_Parameter instance);
    partial void UpdateSetup_Parameter(Setup_Parameter instance);
    partial void DeleteSetup_Parameter(Setup_Parameter instance);
    partial void InsertSetup_JobFunctionParameter(Setup_JobFunctionParameter instance);
    partial void UpdateSetup_JobFunctionParameter(Setup_JobFunctionParameter instance);
    partial void DeleteSetup_JobFunctionParameter(Setup_JobFunctionParameter instance);
    #endregion
		
		public ProcessRunnerDcDataContext() : 
				base(global::WellNet.ProcessRunner.Properties.Settings.Default.ProcessRunnerConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ProcessRunnerDcDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ProcessRunnerDcDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ProcessRunnerDcDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ProcessRunnerDcDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Vendor> Vendors
		{
			get
			{
				return this.GetTable<Vendor>();
			}
		}
		
		public System.Data.Linq.Table<TransmissionSite> TransmissionSites
		{
			get
			{
				return this.GetTable<TransmissionSite>();
			}
		}
		
		public System.Data.Linq.Table<NameValuePair> NameValuePairs
		{
			get
			{
				return this.GetTable<NameValuePair>();
			}
		}
		
		public System.Data.Linq.Table<Event_Job> Event_Jobs
		{
			get
			{
				return this.GetTable<Event_Job>();
			}
		}
		
		public System.Data.Linq.Table<Kind_FunctionParameter> Kind_FunctionParameters
		{
			get
			{
				return this.GetTable<Kind_FunctionParameter>();
			}
		}
		
		public System.Data.Linq.Table<Kind_Function> Kind_Functions
		{
			get
			{
				return this.GetTable<Kind_Function>();
			}
		}
		
		public System.Data.Linq.Table<Setup_Job> Setup_Jobs
		{
			get
			{
				return this.GetTable<Setup_Job>();
			}
		}
		
		public System.Data.Linq.Table<Setup_JobFunction> Setup_JobFunctions
		{
			get
			{
				return this.GetTable<Setup_JobFunction>();
			}
		}
		
		public System.Data.Linq.Table<Event_Message> Event_Messages
		{
			get
			{
				return this.GetTable<Event_Message>();
			}
		}
		
		public System.Data.Linq.Table<Kind_Parameter> Kind_Parameters
		{
			get
			{
				return this.GetTable<Kind_Parameter>();
			}
		}
		
		public System.Data.Linq.Table<Setup_Parameter> Setup_Parameters
		{
			get
			{
				return this.GetTable<Setup_Parameter>();
			}
		}
		
		public System.Data.Linq.Table<Setup_JobFunctionParameter> Setup_JobFunctionParameters
		{
			get
			{
				return this.GetTable<Setup_JobFunctionParameter>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateEventJobRunWhen")]
		public int UpdateEventJobRunWhen([global::System.Data.Linq.Mapping.ParameterAttribute(Name="EventJobId", DbType="Int")] System.Nullable<int> eventJobId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), eventJobId);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vendor")]
	public partial class Vendor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Contact;
		
		private string _ArchiveLocation;
		
		private string _WebSite;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnContactChanging(string value);
    partial void OnContactChanged();
    partial void OnArchiveLocationChanging(string value);
    partial void OnArchiveLocationChanged();
    partial void OnWebSiteChanging(string value);
    partial void OnWebSiteChanged();
    #endregion
		
		public Vendor()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contact", DbType="VarChar(1000)")]
		public string Contact
		{
			get
			{
				return this._Contact;
			}
			set
			{
				if ((this._Contact != value))
				{
					this.OnContactChanging(value);
					this.SendPropertyChanging();
					this._Contact = value;
					this.SendPropertyChanged("Contact");
					this.OnContactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArchiveLocation", DbType="VarChar(1000)")]
		public string ArchiveLocation
		{
			get
			{
				return this._ArchiveLocation;
			}
			set
			{
				if ((this._ArchiveLocation != value))
				{
					this.OnArchiveLocationChanging(value);
					this.SendPropertyChanging();
					this._ArchiveLocation = value;
					this.SendPropertyChanged("ArchiveLocation");
					this.OnArchiveLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebSite", DbType="VarChar(100)")]
		public string WebSite
		{
			get
			{
				return this._WebSite;
			}
			set
			{
				if ((this._WebSite != value))
				{
					this.OnWebSiteChanging(value);
					this.SendPropertyChanging();
					this._WebSite = value;
					this.SendPropertyChanged("WebSite");
					this.OnWebSiteChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TransmissionSites")]
	public partial class TransmissionSite : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _VendorId;
		
		private System.Nullable<bool> _IsDefault;
		
		private string _LoginName;
		
		private string _Site;
		
		private string _Password;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnVendorIdChanging(System.Nullable<int> value);
    partial void OnVendorIdChanged();
    partial void OnIsDefaultChanging(System.Nullable<bool> value);
    partial void OnIsDefaultChanged();
    partial void OnLoginNameChanging(string value);
    partial void OnLoginNameChanged();
    partial void OnSiteChanging(string value);
    partial void OnSiteChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    #endregion
		
		public TransmissionSite()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorId", DbType="Int")]
		public System.Nullable<int> VendorId
		{
			get
			{
				return this._VendorId;
			}
			set
			{
				if ((this._VendorId != value))
				{
					this.OnVendorIdChanging(value);
					this.SendPropertyChanging();
					this._VendorId = value;
					this.SendPropertyChanged("VendorId");
					this.OnVendorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDefault", DbType="Bit")]
		public System.Nullable<bool> IsDefault
		{
			get
			{
				return this._IsDefault;
			}
			set
			{
				if ((this._IsDefault != value))
				{
					this.OnIsDefaultChanging(value);
					this.SendPropertyChanging();
					this._IsDefault = value;
					this.SendPropertyChanged("IsDefault");
					this.OnIsDefaultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginName", DbType="VarChar(50)")]
		public string LoginName
		{
			get
			{
				return this._LoginName;
			}
			set
			{
				if ((this._LoginName != value))
				{
					this.OnLoginNameChanging(value);
					this.SendPropertyChanging();
					this._LoginName = value;
					this.SendPropertyChanged("LoginName");
					this.OnLoginNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Site", DbType="VarChar(50)")]
		public string Site
		{
			get
			{
				return this._Site;
			}
			set
			{
				if ((this._Site != value))
				{
					this.OnSiteChanging(value);
					this.SendPropertyChanging();
					this._Site = value;
					this.SendPropertyChanged("Site");
					this.OnSiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NameValuePair")]
	public partial class NameValuePair : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Kind;
		
		private string _Name;
		
		private string _Value;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnKindChanging(string value);
    partial void OnKindChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    #endregion
		
		public NameValuePair()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kind", DbType="VarChar(50)")]
		public string Kind
		{
			get
			{
				return this._Kind;
			}
			set
			{
				if ((this._Kind != value))
				{
					this.OnKindChanging(value);
					this.SendPropertyChanging();
					this._Kind = value;
					this.SendPropertyChanged("Kind");
					this.OnKindChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Event_Job")]
	public partial class Event_Job : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _Setup_JobId;
		
		private string _RequestedBy;
		
		private System.DateTime _RequestedWhen;
		
		private System.Nullable<System.DateTime> _RunWhen;
		
		private System.Nullable<int> _Status;
		
		private EntitySet<Event_Message> _Event_Messages;
		
		private EntityRef<Setup_Job> _Setup_Job;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSetup_JobIdChanging(int value);
    partial void OnSetup_JobIdChanged();
    partial void OnRequestedByChanging(string value);
    partial void OnRequestedByChanged();
    partial void OnRequestedWhenChanging(System.DateTime value);
    partial void OnRequestedWhenChanged();
    partial void OnRunWhenChanging(System.Nullable<System.DateTime> value);
    partial void OnRunWhenChanged();
    partial void OnStatusChanging(System.Nullable<int> value);
    partial void OnStatusChanged();
    #endregion
		
		public Event_Job()
		{
			this._Event_Messages = new EntitySet<Event_Message>(new Action<Event_Message>(this.attach_Event_Messages), new Action<Event_Message>(this.detach_Event_Messages));
			this._Setup_Job = default(EntityRef<Setup_Job>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Setup_JobId", DbType="Int NOT NULL")]
		public int Setup_JobId
		{
			get
			{
				return this._Setup_JobId;
			}
			set
			{
				if ((this._Setup_JobId != value))
				{
					if (this._Setup_Job.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSetup_JobIdChanging(value);
					this.SendPropertyChanging();
					this._Setup_JobId = value;
					this.SendPropertyChanged("Setup_JobId");
					this.OnSetup_JobIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestedBy", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string RequestedBy
		{
			get
			{
				return this._RequestedBy;
			}
			set
			{
				if ((this._RequestedBy != value))
				{
					this.OnRequestedByChanging(value);
					this.SendPropertyChanging();
					this._RequestedBy = value;
					this.SendPropertyChanged("RequestedBy");
					this.OnRequestedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestedWhen", DbType="DateTime NOT NULL", IsDbGenerated=true)]
		public System.DateTime RequestedWhen
		{
			get
			{
				return this._RequestedWhen;
			}
			set
			{
				if ((this._RequestedWhen != value))
				{
					this.OnRequestedWhenChanging(value);
					this.SendPropertyChanging();
					this._RequestedWhen = value;
					this.SendPropertyChanged("RequestedWhen");
					this.OnRequestedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RunWhen", DbType="DateTime")]
		public System.Nullable<System.DateTime> RunWhen
		{
			get
			{
				return this._RunWhen;
			}
			set
			{
				if ((this._RunWhen != value))
				{
					this.OnRunWhenChanging(value);
					this.SendPropertyChanging();
					this._RunWhen = value;
					this.SendPropertyChanged("RunWhen");
					this.OnRunWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Event_Job_Event_Message", Storage="_Event_Messages", ThisKey="Id", OtherKey="Event_JobId")]
		public EntitySet<Event_Message> Event_Messages
		{
			get
			{
				return this._Event_Messages;
			}
			set
			{
				this._Event_Messages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Setup_Job_Event_Job", Storage="_Setup_Job", ThisKey="Setup_JobId", OtherKey="Id", IsForeignKey=true)]
		public Setup_Job Setup_Job
		{
			get
			{
				return this._Setup_Job.Entity;
			}
			set
			{
				Setup_Job previousValue = this._Setup_Job.Entity;
				if (((previousValue != value) 
							|| (this._Setup_Job.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Setup_Job.Entity = null;
						previousValue.Event_Jobs.Remove(this);
					}
					this._Setup_Job.Entity = value;
					if ((value != null))
					{
						value.Event_Jobs.Add(this);
						this._Setup_JobId = value.Id;
					}
					else
					{
						this._Setup_JobId = default(int);
					}
					this.SendPropertyChanged("Setup_Job");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Event_Messages(Event_Message entity)
		{
			this.SendPropertyChanging();
			entity.Event_Job = this;
		}
		
		private void detach_Event_Messages(Event_Message entity)
		{
			this.SendPropertyChanging();
			entity.Event_Job = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Kind_FunctionParameter")]
	public partial class Kind_FunctionParameter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _Kind_FunctionId;
		
		private int _Kind_ParameterId;
		
		private EntityRef<Kind_Function> _Kind_Function;
		
		private EntityRef<Kind_Parameter> _Kind_Parameter;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnKind_FunctionIdChanging(int value);
    partial void OnKind_FunctionIdChanged();
    partial void OnKind_ParameterIdChanging(int value);
    partial void OnKind_ParameterIdChanged();
    #endregion
		
		public Kind_FunctionParameter()
		{
			this._Kind_Function = default(EntityRef<Kind_Function>);
			this._Kind_Parameter = default(EntityRef<Kind_Parameter>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kind_FunctionId", DbType="Int NOT NULL")]
		public int Kind_FunctionId
		{
			get
			{
				return this._Kind_FunctionId;
			}
			set
			{
				if ((this._Kind_FunctionId != value))
				{
					if (this._Kind_Function.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKind_FunctionIdChanging(value);
					this.SendPropertyChanging();
					this._Kind_FunctionId = value;
					this.SendPropertyChanged("Kind_FunctionId");
					this.OnKind_FunctionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kind_ParameterId", DbType="Int NOT NULL")]
		public int Kind_ParameterId
		{
			get
			{
				return this._Kind_ParameterId;
			}
			set
			{
				if ((this._Kind_ParameterId != value))
				{
					if (this._Kind_Parameter.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKind_ParameterIdChanging(value);
					this.SendPropertyChanging();
					this._Kind_ParameterId = value;
					this.SendPropertyChanged("Kind_ParameterId");
					this.OnKind_ParameterIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kind_Function_Kind_FunctionParameter", Storage="_Kind_Function", ThisKey="Kind_FunctionId", OtherKey="Id", IsForeignKey=true)]
		public Kind_Function Kind_Function
		{
			get
			{
				return this._Kind_Function.Entity;
			}
			set
			{
				Kind_Function previousValue = this._Kind_Function.Entity;
				if (((previousValue != value) 
							|| (this._Kind_Function.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Kind_Function.Entity = null;
						previousValue.Kind_FunctionParameters.Remove(this);
					}
					this._Kind_Function.Entity = value;
					if ((value != null))
					{
						value.Kind_FunctionParameters.Add(this);
						this._Kind_FunctionId = value.Id;
					}
					else
					{
						this._Kind_FunctionId = default(int);
					}
					this.SendPropertyChanged("Kind_Function");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kind_Parameter_Kind_FunctionParameter", Storage="_Kind_Parameter", ThisKey="Kind_ParameterId", OtherKey="Id", IsForeignKey=true)]
		public Kind_Parameter Kind_Parameter
		{
			get
			{
				return this._Kind_Parameter.Entity;
			}
			set
			{
				Kind_Parameter previousValue = this._Kind_Parameter.Entity;
				if (((previousValue != value) 
							|| (this._Kind_Parameter.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Kind_Parameter.Entity = null;
						previousValue.Kind_FunctionParameters.Remove(this);
					}
					this._Kind_Parameter.Entity = value;
					if ((value != null))
					{
						value.Kind_FunctionParameters.Add(this);
						this._Kind_ParameterId = value.Id;
					}
					else
					{
						this._Kind_ParameterId = default(int);
					}
					this.SendPropertyChanged("Kind_Parameter");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Kind_Function")]
	public partial class Kind_Function : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private EntitySet<Kind_FunctionParameter> _Kind_FunctionParameters;
		
		private EntitySet<Setup_JobFunction> _Setup_JobFunctions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Kind_Function()
		{
			this._Kind_FunctionParameters = new EntitySet<Kind_FunctionParameter>(new Action<Kind_FunctionParameter>(this.attach_Kind_FunctionParameters), new Action<Kind_FunctionParameter>(this.detach_Kind_FunctionParameters));
			this._Setup_JobFunctions = new EntitySet<Setup_JobFunction>(new Action<Setup_JobFunction>(this.attach_Setup_JobFunctions), new Action<Setup_JobFunction>(this.detach_Setup_JobFunctions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kind_Function_Kind_FunctionParameter", Storage="_Kind_FunctionParameters", ThisKey="Id", OtherKey="Kind_FunctionId")]
		public EntitySet<Kind_FunctionParameter> Kind_FunctionParameters
		{
			get
			{
				return this._Kind_FunctionParameters;
			}
			set
			{
				this._Kind_FunctionParameters.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kind_Function_Setup_JobFunction", Storage="_Setup_JobFunctions", ThisKey="Id", OtherKey="Kind_FunctionId")]
		public EntitySet<Setup_JobFunction> Setup_JobFunctions
		{
			get
			{
				return this._Setup_JobFunctions;
			}
			set
			{
				this._Setup_JobFunctions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Kind_FunctionParameters(Kind_FunctionParameter entity)
		{
			this.SendPropertyChanging();
			entity.Kind_Function = this;
		}
		
		private void detach_Kind_FunctionParameters(Kind_FunctionParameter entity)
		{
			this.SendPropertyChanging();
			entity.Kind_Function = null;
		}
		
		private void attach_Setup_JobFunctions(Setup_JobFunction entity)
		{
			this.SendPropertyChanging();
			entity.Kind_Function = this;
		}
		
		private void detach_Setup_JobFunctions(Setup_JobFunction entity)
		{
			this.SendPropertyChanging();
			entity.Kind_Function = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Setup_Job")]
	public partial class Setup_Job : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private System.Nullable<bool> _IsRetired;
		
		private System.Nullable<bool> _IsDisabled;
		
		private int _Direction;
		
		private EntitySet<Event_Job> _Event_Jobs;
		
		private EntitySet<Setup_JobFunction> _Setup_JobFunctions;
		
		private EntitySet<Setup_JobFunctionParameter> _Setup_JobFunctionParameters;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIsRetiredChanging(System.Nullable<bool> value);
    partial void OnIsRetiredChanged();
    partial void OnIsDisabledChanging(System.Nullable<bool> value);
    partial void OnIsDisabledChanged();
    partial void OnDirectionChanging(int value);
    partial void OnDirectionChanged();
    #endregion
		
		public Setup_Job()
		{
			this._Event_Jobs = new EntitySet<Event_Job>(new Action<Event_Job>(this.attach_Event_Jobs), new Action<Event_Job>(this.detach_Event_Jobs));
			this._Setup_JobFunctions = new EntitySet<Setup_JobFunction>(new Action<Setup_JobFunction>(this.attach_Setup_JobFunctions), new Action<Setup_JobFunction>(this.detach_Setup_JobFunctions));
			this._Setup_JobFunctionParameters = new EntitySet<Setup_JobFunctionParameter>(new Action<Setup_JobFunctionParameter>(this.attach_Setup_JobFunctionParameters), new Action<Setup_JobFunctionParameter>(this.detach_Setup_JobFunctionParameters));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRetired", DbType="Bit")]
		public System.Nullable<bool> IsRetired
		{
			get
			{
				return this._IsRetired;
			}
			set
			{
				if ((this._IsRetired != value))
				{
					this.OnIsRetiredChanging(value);
					this.SendPropertyChanging();
					this._IsRetired = value;
					this.SendPropertyChanged("IsRetired");
					this.OnIsRetiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDisabled", DbType="Bit")]
		public System.Nullable<bool> IsDisabled
		{
			get
			{
				return this._IsDisabled;
			}
			set
			{
				if ((this._IsDisabled != value))
				{
					this.OnIsDisabledChanging(value);
					this.SendPropertyChanging();
					this._IsDisabled = value;
					this.SendPropertyChanged("IsDisabled");
					this.OnIsDisabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Direction", DbType="Int NOT NULL")]
		public int Direction
		{
			get
			{
				return this._Direction;
			}
			set
			{
				if ((this._Direction != value))
				{
					this.OnDirectionChanging(value);
					this.SendPropertyChanging();
					this._Direction = value;
					this.SendPropertyChanged("Direction");
					this.OnDirectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Setup_Job_Event_Job", Storage="_Event_Jobs", ThisKey="Id", OtherKey="Setup_JobId")]
		public EntitySet<Event_Job> Event_Jobs
		{
			get
			{
				return this._Event_Jobs;
			}
			set
			{
				this._Event_Jobs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Setup_Job_Setup_JobFunction", Storage="_Setup_JobFunctions", ThisKey="Id", OtherKey="Setup_JobId")]
		public EntitySet<Setup_JobFunction> Setup_JobFunctions
		{
			get
			{
				return this._Setup_JobFunctions;
			}
			set
			{
				this._Setup_JobFunctions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Setup_Job_Setup_JobFunctionParameter", Storage="_Setup_JobFunctionParameters", ThisKey="Id", OtherKey="Setup_JobId")]
		public EntitySet<Setup_JobFunctionParameter> Setup_JobFunctionParameters
		{
			get
			{
				return this._Setup_JobFunctionParameters;
			}
			set
			{
				this._Setup_JobFunctionParameters.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Event_Jobs(Event_Job entity)
		{
			this.SendPropertyChanging();
			entity.Setup_Job = this;
		}
		
		private void detach_Event_Jobs(Event_Job entity)
		{
			this.SendPropertyChanging();
			entity.Setup_Job = null;
		}
		
		private void attach_Setup_JobFunctions(Setup_JobFunction entity)
		{
			this.SendPropertyChanging();
			entity.Setup_Job = this;
		}
		
		private void detach_Setup_JobFunctions(Setup_JobFunction entity)
		{
			this.SendPropertyChanging();
			entity.Setup_Job = null;
		}
		
		private void attach_Setup_JobFunctionParameters(Setup_JobFunctionParameter entity)
		{
			this.SendPropertyChanging();
			entity.Setup_Job = this;
		}
		
		private void detach_Setup_JobFunctionParameters(Setup_JobFunctionParameter entity)
		{
			this.SendPropertyChanging();
			entity.Setup_Job = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Setup_JobFunction")]
	public partial class Setup_JobFunction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _Setup_JobId;
		
		private int _Kind_FunctionId;
		
		private int _Sequence;
		
		private System.Nullable<bool> _IsDisabled;
		
		private EntitySet<Setup_JobFunctionParameter> _Setup_JobFunctionParameters;
		
		private EntityRef<Kind_Function> _Kind_Function;
		
		private EntityRef<Setup_Job> _Setup_Job;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSetup_JobIdChanging(int value);
    partial void OnSetup_JobIdChanged();
    partial void OnKind_FunctionIdChanging(int value);
    partial void OnKind_FunctionIdChanged();
    partial void OnSequenceChanging(int value);
    partial void OnSequenceChanged();
    partial void OnIsDisabledChanging(System.Nullable<bool> value);
    partial void OnIsDisabledChanged();
    #endregion
		
		public Setup_JobFunction()
		{
			this._Setup_JobFunctionParameters = new EntitySet<Setup_JobFunctionParameter>(new Action<Setup_JobFunctionParameter>(this.attach_Setup_JobFunctionParameters), new Action<Setup_JobFunctionParameter>(this.detach_Setup_JobFunctionParameters));
			this._Kind_Function = default(EntityRef<Kind_Function>);
			this._Setup_Job = default(EntityRef<Setup_Job>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Setup_JobId", DbType="Int NOT NULL")]
		public int Setup_JobId
		{
			get
			{
				return this._Setup_JobId;
			}
			set
			{
				if ((this._Setup_JobId != value))
				{
					if (this._Setup_Job.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSetup_JobIdChanging(value);
					this.SendPropertyChanging();
					this._Setup_JobId = value;
					this.SendPropertyChanged("Setup_JobId");
					this.OnSetup_JobIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kind_FunctionId", DbType="Int NOT NULL")]
		public int Kind_FunctionId
		{
			get
			{
				return this._Kind_FunctionId;
			}
			set
			{
				if ((this._Kind_FunctionId != value))
				{
					if (this._Kind_Function.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKind_FunctionIdChanging(value);
					this.SendPropertyChanging();
					this._Kind_FunctionId = value;
					this.SendPropertyChanged("Kind_FunctionId");
					this.OnKind_FunctionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sequence", DbType="Int NOT NULL")]
		public int Sequence
		{
			get
			{
				return this._Sequence;
			}
			set
			{
				if ((this._Sequence != value))
				{
					this.OnSequenceChanging(value);
					this.SendPropertyChanging();
					this._Sequence = value;
					this.SendPropertyChanged("Sequence");
					this.OnSequenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDisabled", DbType="Bit")]
		public System.Nullable<bool> IsDisabled
		{
			get
			{
				return this._IsDisabled;
			}
			set
			{
				if ((this._IsDisabled != value))
				{
					this.OnIsDisabledChanging(value);
					this.SendPropertyChanging();
					this._IsDisabled = value;
					this.SendPropertyChanged("IsDisabled");
					this.OnIsDisabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Setup_JobFunction_Setup_JobFunctionParameter", Storage="_Setup_JobFunctionParameters", ThisKey="Id", OtherKey="Setup_JobFunctionId")]
		public EntitySet<Setup_JobFunctionParameter> Setup_JobFunctionParameters
		{
			get
			{
				return this._Setup_JobFunctionParameters;
			}
			set
			{
				this._Setup_JobFunctionParameters.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kind_Function_Setup_JobFunction", Storage="_Kind_Function", ThisKey="Kind_FunctionId", OtherKey="Id", IsForeignKey=true)]
		public Kind_Function Kind_Function
		{
			get
			{
				return this._Kind_Function.Entity;
			}
			set
			{
				Kind_Function previousValue = this._Kind_Function.Entity;
				if (((previousValue != value) 
							|| (this._Kind_Function.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Kind_Function.Entity = null;
						previousValue.Setup_JobFunctions.Remove(this);
					}
					this._Kind_Function.Entity = value;
					if ((value != null))
					{
						value.Setup_JobFunctions.Add(this);
						this._Kind_FunctionId = value.Id;
					}
					else
					{
						this._Kind_FunctionId = default(int);
					}
					this.SendPropertyChanged("Kind_Function");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Setup_Job_Setup_JobFunction", Storage="_Setup_Job", ThisKey="Setup_JobId", OtherKey="Id", IsForeignKey=true)]
		public Setup_Job Setup_Job
		{
			get
			{
				return this._Setup_Job.Entity;
			}
			set
			{
				Setup_Job previousValue = this._Setup_Job.Entity;
				if (((previousValue != value) 
							|| (this._Setup_Job.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Setup_Job.Entity = null;
						previousValue.Setup_JobFunctions.Remove(this);
					}
					this._Setup_Job.Entity = value;
					if ((value != null))
					{
						value.Setup_JobFunctions.Add(this);
						this._Setup_JobId = value.Id;
					}
					else
					{
						this._Setup_JobId = default(int);
					}
					this.SendPropertyChanged("Setup_Job");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Setup_JobFunctionParameters(Setup_JobFunctionParameter entity)
		{
			this.SendPropertyChanging();
			entity.Setup_JobFunction = this;
		}
		
		private void detach_Setup_JobFunctionParameters(Setup_JobFunctionParameter entity)
		{
			this.SendPropertyChanging();
			entity.Setup_JobFunction = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Event_Message")]
	public partial class Event_Message : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.DateTime _When;
		
		private System.Nullable<int> _Event_JobId;
		
		private System.Nullable<int> _Severity;
		
		private string _Context;
		
		private string _Message;
		
		private EntityRef<Event_Job> _Event_Job;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnWhenChanging(System.DateTime value);
    partial void OnWhenChanged();
    partial void OnEvent_JobIdChanging(System.Nullable<int> value);
    partial void OnEvent_JobIdChanged();
    partial void OnSeverityChanging(System.Nullable<int> value);
    partial void OnSeverityChanged();
    partial void OnContextChanging(string value);
    partial void OnContextChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    #endregion
		
		public Event_Message()
		{
			this._Event_Job = default(EntityRef<Event_Job>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[When]", Storage="_When", DbType="DateTime NOT NULL", IsDbGenerated=true)]
		public System.DateTime When
		{
			get
			{
				return this._When;
			}
			set
			{
				if ((this._When != value))
				{
					this.OnWhenChanging(value);
					this.SendPropertyChanging();
					this._When = value;
					this.SendPropertyChanged("When");
					this.OnWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Event_JobId", DbType="Int")]
		public System.Nullable<int> Event_JobId
		{
			get
			{
				return this._Event_JobId;
			}
			set
			{
				if ((this._Event_JobId != value))
				{
					if (this._Event_Job.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEvent_JobIdChanging(value);
					this.SendPropertyChanging();
					this._Event_JobId = value;
					this.SendPropertyChanged("Event_JobId");
					this.OnEvent_JobIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Severity", DbType="Int")]
		public System.Nullable<int> Severity
		{
			get
			{
				return this._Severity;
			}
			set
			{
				if ((this._Severity != value))
				{
					this.OnSeverityChanging(value);
					this.SendPropertyChanging();
					this._Severity = value;
					this.SendPropertyChanged("Severity");
					this.OnSeverityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Context", DbType="VarChar(1000)")]
		public string Context
		{
			get
			{
				return this._Context;
			}
			set
			{
				if ((this._Context != value))
				{
					this.OnContextChanging(value);
					this.SendPropertyChanging();
					this._Context = value;
					this.SendPropertyChanged("Context");
					this.OnContextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(1000)")]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Event_Job_Event_Message", Storage="_Event_Job", ThisKey="Event_JobId", OtherKey="Id", IsForeignKey=true)]
		public Event_Job Event_Job
		{
			get
			{
				return this._Event_Job.Entity;
			}
			set
			{
				Event_Job previousValue = this._Event_Job.Entity;
				if (((previousValue != value) 
							|| (this._Event_Job.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Event_Job.Entity = null;
						previousValue.Event_Messages.Remove(this);
					}
					this._Event_Job.Entity = value;
					if ((value != null))
					{
						value.Event_Messages.Add(this);
						this._Event_JobId = value.Id;
					}
					else
					{
						this._Event_JobId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Event_Job");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Kind_Parameter")]
	public partial class Kind_Parameter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private EntitySet<Kind_FunctionParameter> _Kind_FunctionParameters;
		
		private EntitySet<Setup_Parameter> _Setup_Parameters;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Kind_Parameter()
		{
			this._Kind_FunctionParameters = new EntitySet<Kind_FunctionParameter>(new Action<Kind_FunctionParameter>(this.attach_Kind_FunctionParameters), new Action<Kind_FunctionParameter>(this.detach_Kind_FunctionParameters));
			this._Setup_Parameters = new EntitySet<Setup_Parameter>(new Action<Setup_Parameter>(this.attach_Setup_Parameters), new Action<Setup_Parameter>(this.detach_Setup_Parameters));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kind_Parameter_Kind_FunctionParameter", Storage="_Kind_FunctionParameters", ThisKey="Id", OtherKey="Kind_ParameterId")]
		public EntitySet<Kind_FunctionParameter> Kind_FunctionParameters
		{
			get
			{
				return this._Kind_FunctionParameters;
			}
			set
			{
				this._Kind_FunctionParameters.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kind_Parameter_Setup_Parameter", Storage="_Setup_Parameters", ThisKey="Id", OtherKey="Kind_ParameterId")]
		public EntitySet<Setup_Parameter> Setup_Parameters
		{
			get
			{
				return this._Setup_Parameters;
			}
			set
			{
				this._Setup_Parameters.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Kind_FunctionParameters(Kind_FunctionParameter entity)
		{
			this.SendPropertyChanging();
			entity.Kind_Parameter = this;
		}
		
		private void detach_Kind_FunctionParameters(Kind_FunctionParameter entity)
		{
			this.SendPropertyChanging();
			entity.Kind_Parameter = null;
		}
		
		private void attach_Setup_Parameters(Setup_Parameter entity)
		{
			this.SendPropertyChanging();
			entity.Kind_Parameter = this;
		}
		
		private void detach_Setup_Parameters(Setup_Parameter entity)
		{
			this.SendPropertyChanging();
			entity.Kind_Parameter = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Setup_Parameter")]
	public partial class Setup_Parameter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private int _Kind_ParameterId;
		
		private string _Value;
		
		private EntitySet<Setup_JobFunctionParameter> _Setup_JobFunctionParameters;
		
		private EntityRef<Kind_Parameter> _Kind_Parameter;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnKind_ParameterIdChanging(int value);
    partial void OnKind_ParameterIdChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    #endregion
		
		public Setup_Parameter()
		{
			this._Setup_JobFunctionParameters = new EntitySet<Setup_JobFunctionParameter>(new Action<Setup_JobFunctionParameter>(this.attach_Setup_JobFunctionParameters), new Action<Setup_JobFunctionParameter>(this.detach_Setup_JobFunctionParameters));
			this._Kind_Parameter = default(EntityRef<Kind_Parameter>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kind_ParameterId", DbType="Int NOT NULL")]
		public int Kind_ParameterId
		{
			get
			{
				return this._Kind_ParameterId;
			}
			set
			{
				if ((this._Kind_ParameterId != value))
				{
					if (this._Kind_Parameter.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKind_ParameterIdChanging(value);
					this.SendPropertyChanging();
					this._Kind_ParameterId = value;
					this.SendPropertyChanged("Kind_ParameterId");
					this.OnKind_ParameterIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="VarChar(1000)")]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Setup_Parameter_Setup_JobFunctionParameter", Storage="_Setup_JobFunctionParameters", ThisKey="Id", OtherKey="Setup_ParameterId")]
		public EntitySet<Setup_JobFunctionParameter> Setup_JobFunctionParameters
		{
			get
			{
				return this._Setup_JobFunctionParameters;
			}
			set
			{
				this._Setup_JobFunctionParameters.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kind_Parameter_Setup_Parameter", Storage="_Kind_Parameter", ThisKey="Kind_ParameterId", OtherKey="Id", IsForeignKey=true)]
		public Kind_Parameter Kind_Parameter
		{
			get
			{
				return this._Kind_Parameter.Entity;
			}
			set
			{
				Kind_Parameter previousValue = this._Kind_Parameter.Entity;
				if (((previousValue != value) 
							|| (this._Kind_Parameter.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Kind_Parameter.Entity = null;
						previousValue.Setup_Parameters.Remove(this);
					}
					this._Kind_Parameter.Entity = value;
					if ((value != null))
					{
						value.Setup_Parameters.Add(this);
						this._Kind_ParameterId = value.Id;
					}
					else
					{
						this._Kind_ParameterId = default(int);
					}
					this.SendPropertyChanged("Kind_Parameter");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Setup_JobFunctionParameters(Setup_JobFunctionParameter entity)
		{
			this.SendPropertyChanging();
			entity.Setup_Parameter = this;
		}
		
		private void detach_Setup_JobFunctionParameters(Setup_JobFunctionParameter entity)
		{
			this.SendPropertyChanging();
			entity.Setup_Parameter = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Setup_JobFunctionParameter")]
	public partial class Setup_JobFunctionParameter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _Setup_JobId;
		
		private int _Setup_JobFunctionId;
		
		private int _Setup_ParameterId;
		
		private EntityRef<Setup_Job> _Setup_Job;
		
		private EntityRef<Setup_JobFunction> _Setup_JobFunction;
		
		private EntityRef<Setup_Parameter> _Setup_Parameter;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSetup_JobIdChanging(int value);
    partial void OnSetup_JobIdChanged();
    partial void OnSetup_JobFunctionIdChanging(int value);
    partial void OnSetup_JobFunctionIdChanged();
    partial void OnSetup_ParameterIdChanging(int value);
    partial void OnSetup_ParameterIdChanged();
    #endregion
		
		public Setup_JobFunctionParameter()
		{
			this._Setup_Job = default(EntityRef<Setup_Job>);
			this._Setup_JobFunction = default(EntityRef<Setup_JobFunction>);
			this._Setup_Parameter = default(EntityRef<Setup_Parameter>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Setup_JobId", DbType="Int NOT NULL")]
		public int Setup_JobId
		{
			get
			{
				return this._Setup_JobId;
			}
			set
			{
				if ((this._Setup_JobId != value))
				{
					if (this._Setup_Job.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSetup_JobIdChanging(value);
					this.SendPropertyChanging();
					this._Setup_JobId = value;
					this.SendPropertyChanged("Setup_JobId");
					this.OnSetup_JobIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Setup_JobFunctionId", DbType="Int NOT NULL")]
		public int Setup_JobFunctionId
		{
			get
			{
				return this._Setup_JobFunctionId;
			}
			set
			{
				if ((this._Setup_JobFunctionId != value))
				{
					if (this._Setup_JobFunction.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSetup_JobFunctionIdChanging(value);
					this.SendPropertyChanging();
					this._Setup_JobFunctionId = value;
					this.SendPropertyChanged("Setup_JobFunctionId");
					this.OnSetup_JobFunctionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Setup_ParameterId", DbType="Int NOT NULL")]
		public int Setup_ParameterId
		{
			get
			{
				return this._Setup_ParameterId;
			}
			set
			{
				if ((this._Setup_ParameterId != value))
				{
					if (this._Setup_Parameter.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSetup_ParameterIdChanging(value);
					this.SendPropertyChanging();
					this._Setup_ParameterId = value;
					this.SendPropertyChanged("Setup_ParameterId");
					this.OnSetup_ParameterIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Setup_Job_Setup_JobFunctionParameter", Storage="_Setup_Job", ThisKey="Setup_JobId", OtherKey="Id", IsForeignKey=true)]
		public Setup_Job Setup_Job
		{
			get
			{
				return this._Setup_Job.Entity;
			}
			set
			{
				Setup_Job previousValue = this._Setup_Job.Entity;
				if (((previousValue != value) 
							|| (this._Setup_Job.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Setup_Job.Entity = null;
						previousValue.Setup_JobFunctionParameters.Remove(this);
					}
					this._Setup_Job.Entity = value;
					if ((value != null))
					{
						value.Setup_JobFunctionParameters.Add(this);
						this._Setup_JobId = value.Id;
					}
					else
					{
						this._Setup_JobId = default(int);
					}
					this.SendPropertyChanged("Setup_Job");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Setup_JobFunction_Setup_JobFunctionParameter", Storage="_Setup_JobFunction", ThisKey="Setup_JobFunctionId", OtherKey="Id", IsForeignKey=true)]
		public Setup_JobFunction Setup_JobFunction
		{
			get
			{
				return this._Setup_JobFunction.Entity;
			}
			set
			{
				Setup_JobFunction previousValue = this._Setup_JobFunction.Entity;
				if (((previousValue != value) 
							|| (this._Setup_JobFunction.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Setup_JobFunction.Entity = null;
						previousValue.Setup_JobFunctionParameters.Remove(this);
					}
					this._Setup_JobFunction.Entity = value;
					if ((value != null))
					{
						value.Setup_JobFunctionParameters.Add(this);
						this._Setup_JobFunctionId = value.Id;
					}
					else
					{
						this._Setup_JobFunctionId = default(int);
					}
					this.SendPropertyChanged("Setup_JobFunction");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Setup_Parameter_Setup_JobFunctionParameter", Storage="_Setup_Parameter", ThisKey="Setup_ParameterId", OtherKey="Id", IsForeignKey=true)]
		public Setup_Parameter Setup_Parameter
		{
			get
			{
				return this._Setup_Parameter.Entity;
			}
			set
			{
				Setup_Parameter previousValue = this._Setup_Parameter.Entity;
				if (((previousValue != value) 
							|| (this._Setup_Parameter.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Setup_Parameter.Entity = null;
						previousValue.Setup_JobFunctionParameters.Remove(this);
					}
					this._Setup_Parameter.Entity = value;
					if ((value != null))
					{
						value.Setup_JobFunctionParameters.Add(this);
						this._Setup_ParameterId = value.Id;
					}
					else
					{
						this._Setup_ParameterId = default(int);
					}
					this.SendPropertyChanged("Setup_Parameter");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
